From 9f38bc3fd4d69592c9994987088a7f96a60580f8 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 7 Oct 2017 20:39:59 -0400
Subject: [PATCH] Use Optimized Collections

Swap out CraftBukkit LongObjectHashMap with Long2ObjectOpenHashMap
Swap out Integer key HashMap for a Int2ObjectOpenHashMap For ChunkProviderServer

Amaranth, the creator of LongObjectHashMap, tested it vs fastutil and determined fastutil to be 3x faster
and could not create anything faster than fastutil.

These collections are super fast as seen
http://java-performance.info/hashmap-overview-jdk-fastutil-goldman-sachs-hppc-koloboke-trove-january-2015/

diff --git a/src/main/java/net/minecraft/network/datasync/EntityDataManager.java b/src/main/java/net/minecraft/network/datasync/EntityDataManager.java
index 26af08c..325a540 100644
--- a/src/main/java/net/minecraft/network/datasync/EntityDataManager.java
+++ b/src/main/java/net/minecraft/network/datasync/EntityDataManager.java
@@ -11,6 +11,8 @@ import java.util.Map;
 import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import javax.annotation.Nullable;
+
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.Entity;
@@ -24,7 +26,7 @@ public class EntityDataManager {
     private static final Logger LOGGER = LogManager.getLogger();
     private static final Map<Class<? extends Entity>, Integer> NEXT_ID_MAP = Maps.<Class<? extends Entity>, Integer>newHashMap();
     private final Entity entity;
-    private final Map<Integer, EntityDataManager.DataEntry<?>> entries = Maps.<Integer, EntityDataManager.DataEntry<?>>newHashMap();
+    private final Map<Integer, EntityDataManager.DataEntry<?>> entries = new Int2ObjectOpenHashMap<>(); // Paper
     private final ReadWriteLock lock = new ReentrantReadWriteLock();
     private boolean empty = true;
     private boolean dirty;
-- 
2.18.0

