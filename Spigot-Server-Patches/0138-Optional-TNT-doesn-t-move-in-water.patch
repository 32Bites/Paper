From b50a31332d2b7edde5b83d7aaf0e9d2c43cbfc70 Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Mon, 9 Oct 2017 18:36:35 -0400
Subject: [PATCH] Optional TNT doesn't move in water


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index b7515b5..e34d5fd 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -2,7 +2,6 @@ package com.destroystokyo.paper;
 
 import java.util.List;
 
-import org.bukkit.Bukkit;
 import org.bukkit.configuration.file.YamlConfiguration;
 import org.spigotmc.SpigotWorldConfig;
 
@@ -321,4 +320,14 @@ public class PaperWorldConfig {
             );
         }
     }
+
+    public boolean preventTntFromMovingInWater;
+    private void preventTntFromMovingInWater() {
+        if (PaperConfig.version < 13) {
+            boolean oldVal = getBoolean("enable-old-tnt-cannon-behaviors", false);
+            set("prevent-tnt-from-moving-in-water", oldVal);
+        }
+        preventTntFromMovingInWater = getBoolean("prevent-tnt-from-moving-in-water", false);
+        log("Prevent TNT from moving in water: " + preventTntFromMovingInWater);
+    }
 }
diff --git a/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java b/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
index a908be8..f63436c 100644
--- a/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
@@ -3,14 +3,18 @@ package net.minecraft.entity.item;
 import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.EntityTrackerEntry;
 import net.minecraft.entity.MoverType;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.network.datasync.DataParameter;
 import net.minecraft.network.datasync.DataSerializers;
 import net.minecraft.network.datasync.EntityDataManager;
+import net.minecraft.network.play.server.SPacketEntityTeleport;
+import net.minecraft.network.play.server.SPacketEntityVelocity;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
+import net.minecraft.world.WorldServer;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.entity.CraftEntity;
 import org.bukkit.entity.Explosive;
@@ -159,4 +163,49 @@ public class EntityTNTPrimed extends Entity {
     public int getFuse() {
         return this.fuse;
     }
+
+    // Paper start - Optional prevent TNT from moving in water
+    @Override
+    public boolean isPushedByWater() {
+        return !world.paperConfig.preventTntFromMovingInWater && super.isPushedByWater();
+    }
+
+    /**
+     * Author: Jedediah Smith <jedediah@silencegreys.com>
+     */
+    @Override
+    public boolean handleWaterMovement() {
+        if (!world.paperConfig.preventTntFromMovingInWater) return super.handleWaterMovement();
+
+        // Preserve velocity while calling the super method
+        double oldMotX = this.motionX;
+        double oldMotY = this.motionY;
+        double oldMotZ = this.motionZ;
+
+        super.handleWaterMovement();
+
+        this.motionX = oldMotX;
+        this.motionY = oldMotY;
+        this.motionZ = oldMotZ;
+
+        if (this.inWater) {
+            // Send position and velocity updates to nearby players on every tick while the TNT is in water.
+            // This does pretty well at keeping their clients in sync with the server.
+            EntityTrackerEntry ete = ((WorldServer) this.getEntityWorld()).getEntityTracker().trackedEntityHashTable.lookup(this.getEntityId());
+            if (ete != null) {
+                SPacketEntityVelocity velocityPacket = new SPacketEntityVelocity(this);
+                SPacketEntityTeleport positionPacket = new SPacketEntityTeleport(this);
+
+                ete.trackingPlayers.stream()
+                        .filter(viewer -> (viewer.posX - this.posX) * (viewer.posY - this.posY) * (viewer.posZ - this.posZ) < 16 * 16)
+                        .forEach(viewer -> {
+                    viewer.connection.sendPacket(velocityPacket);
+                    viewer.connection.sendPacket(positionPacket);
+                });
+            }
+        }
+
+        return this.inWater;
+    }
+    // Paper end
 }
-- 
2.18.0

