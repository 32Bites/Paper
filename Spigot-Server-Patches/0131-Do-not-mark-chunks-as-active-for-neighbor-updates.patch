From 6f9a69cf7f99ec9a988f7386f75761a17ae39b98 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Oct 2017 17:53:12 -0400
Subject: [PATCH] Do not mark chunks as active for neighbor updates

Fixes chunk unload issus

diff --git a/src/main/java/net/minecraft/world/chunk/Chunk.java b/src/main/java/net/minecraft/world/chunk/Chunk.java
index 8ceeb3d..d735f0f 100644
--- a/src/main/java/net/minecraft/world/chunk/Chunk.java
+++ b/src/main/java/net/minecraft/world/chunk/Chunk.java
@@ -2,6 +2,7 @@ package net.minecraft.world.chunk;
 
 import com.destroystokyo.paper.exception.ServerInternalException;
 import com.destroystokyo.paper.lighting.PaperLightingQueue; // Paper
+import com.destroystokyo.paper.util.MCUtil;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -1002,25 +1003,27 @@ public class Chunk {
         world.timings.syncChunkLoadPostTimer.stopTiming(); // Paper
         world.timings.syncChunkLoadPopulateNeighbors.startTiming(); // Paper
 
-        Chunk chunk = ichunkprovider.getLoadedChunk(this.x, this.z - 1);
-        Chunk chunk1 = ichunkprovider.getLoadedChunk(this.x + 1, this.z);
-        Chunk chunk2 = ichunkprovider.getLoadedChunk(this.x, this.z + 1);
-        Chunk chunk3 = ichunkprovider.getLoadedChunk(this.x - 1, this.z);
+        // Paper start - Get chunk without marking as active
+        Chunk chunk =  MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider, this.x, this.z - 1);
+        Chunk chunk1 = MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x + 1, this.z);
+        Chunk chunk2 = MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider, this.x, this.z + 1);
+        Chunk chunk3 = MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x - 1, this.z);
+        // Paper end
 
-        if (chunk1 != null && chunk2 != null && ichunkprovider.getLoadedChunk(this.x + 1, this.z + 1) != null) {
+        if (chunk1 != null && chunk2 != null && MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x + 1, this.z + 1) != null) { // Paper - Get chunk without marking as active
             this.populate(chunkgenerator);
         }
 
-        if (chunk3 != null && chunk2 != null && ichunkprovider.getLoadedChunk(this.x - 1, this.z + 1) != null) {
+        if (chunk3 != null && chunk2 != null && MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x - 1, this.z + 1) != null) { // Paper - Get chunk without marking as active
             chunk3.populate(chunkgenerator);
         }
 
-        if (chunk != null && chunk1 != null && ichunkprovider.getLoadedChunk(this.x + 1, this.z - 1) != null) {
+        if (chunk != null && chunk1 != null && MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x + 1, this.z - 1) != null) { // Paper - Get chunk without marking as active
             chunk.populate(chunkgenerator);
         }
 
         if (chunk != null && chunk3 != null) {
-            Chunk chunk4 = ichunkprovider.getLoadedChunk(this.x - 1, this.z - 1);
+            Chunk chunk4 = MCUtil.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.x - 1, this.z - 1); // Paper - Get chunk without marking as active
 
             if (chunk4 != null) {
                 chunk4.populate(chunkgenerator);
-- 
2.18.0

