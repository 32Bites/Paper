From b9758ff6fe6a13b0d114eaab4528a565d8929d52 Mon Sep 17 00:00:00 2001
From: vemacs <d@nkmem.es>
Date: Tue, 10 Oct 2017 17:31:56 -0400
Subject: [PATCH] Cache user authenticator threads


diff --git a/src/main/java/net/minecraft/server/network/NetHandlerLoginServer.java b/src/main/java/net/minecraft/server/network/NetHandlerLoginServer.java
index 639c5ae..6db3909 100644
--- a/src/main/java/net/minecraft/server/network/NetHandlerLoginServer.java
+++ b/src/main/java/net/minecraft/server/network/NetHandlerLoginServer.java
@@ -103,6 +103,13 @@ public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
         }
     }
 
+    // Paper start - Cache authenticator threads
+    private static final AtomicInteger threadId = new AtomicInteger(0);
+    private static final java.util.concurrent.ExecutorService authenticatorPool = java.util.concurrent.Executors.newCachedThreadPool(
+            r -> new Thread(r, "User Authenticator #" + threadId.incrementAndGet())
+    );
+    // Paper end
+
     public void initUUID() {
         UUID uuid;
 
@@ -174,7 +181,7 @@ public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
             this.currentLoginState = NetHandlerLoginServer.LoginState.KEY;
             this.networkManager.sendPacket(new SPacketEncryptionRequest("", this.server.getKeyPair().getPublic(), this.verifyToken));
         } else {
-            (new Thread("User Authenticator #" + AUTHENTICATOR_THREAD_ID.incrementAndGet()) {
+            authenticatorPool.execute(new Runnable() { // Paper - Cache authenticator threads
                         public void run() {
                             try {
                                 NetHandlerLoginServer.this.initUUID();
@@ -192,8 +199,7 @@ public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
                                                 (Throwable) var2);
                             }
                         }
-                    })
-                    .start();
+                    }); // Paper
         }
     }
 
@@ -207,7 +213,7 @@ public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
             this.secretKey = packetIn.getSecretKey(privatekey);
             this.currentLoginState = NetHandlerLoginServer.LoginState.AUTHENTICATING;
             this.networkManager.enableEncryption(this.secretKey);
-            (new Thread("User Authenticator #" + AUTHENTICATOR_THREAD_ID.incrementAndGet()) {
+            authenticatorPool.execute(new Runnable() { // Paper - Cache authenticator threads
                         public void run() {
                             GameProfile gameprofile = NetHandlerLoginServer.this.loginGameProfile;
 
@@ -268,8 +274,7 @@ public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
                                     ? ((InetSocketAddress) socketaddress).getAddress()
                                     : null;
                         }
-                    })
-                    .start();
+                    }); // Paper
         }
     }
 
-- 
2.18.0

