From 7b6c44362c0a282b1044b87ff046e50ff77cc4cb Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Sun, 29 Oct 2017 20:53:22 -0400
Subject: [PATCH] Entity#fromMobSpawner()


diff --git a/src/main/java/net/minecraft/entity/Entity.java b/src/main/java/net/minecraft/entity/Entity.java
index a1b5f7a..4a3c13e 100644
--- a/src/main/java/net/minecraft/entity/Entity.java
+++ b/src/main/java/net/minecraft/entity/Entity.java
@@ -223,6 +223,7 @@ public abstract class Entity implements ICommandSender {
     public final boolean defaultActivationState;
     public long activatedTick = -2147483648L;
     public boolean fromMobSpawner;
+    public boolean spawnedViaMobSpawner; // Paper - Yes this name is similar to above, upstream took the better one
     public Location origin; // Paper
     public static final Random SHARED_RANDOM = new Random(); // Paper
     EntityTrackerEntry tracker; // Paper
@@ -1591,6 +1592,10 @@ public abstract class Entity implements ICommandSender {
             if (origin != null) {
                 compound.setTag("Paper.Origin", this.newDoubleNBTList(origin.getX(), origin.getY(), origin.getZ()));
             }
+            // Save entity's from mob spawner status
+            if (spawnedViaMobSpawner) {
+                compound.setBoolean("Paper.FromMobSpawner", true);
+            }
             // Paper end
 
             return compound;
@@ -1720,6 +1725,7 @@ public abstract class Entity implements ICommandSender {
             if (!originTag.hasNoTags()) {
                 origin = new Location(world.getWorld(), originTag.getDoubleAt(0), originTag.getDoubleAt(1), originTag.getDoubleAt(2));
             }
+            spawnedViaMobSpawner = compound.getBoolean("Paper.FromMobSpawner"); // Restore entity's from mob spawner status
             // Paper end
         } catch (Throwable var9) {
             CrashReport crashreport = CrashReport.makeCrashReport(var9, "Loading entity NBT");
diff --git a/src/main/java/net/minecraft/tileentity/MobSpawnerBaseLogic.java b/src/main/java/net/minecraft/tileentity/MobSpawnerBaseLogic.java
index affb248..d9220e2 100644
--- a/src/main/java/net/minecraft/tileentity/MobSpawnerBaseLogic.java
+++ b/src/main/java/net/minecraft/tileentity/MobSpawnerBaseLogic.java
@@ -140,6 +140,7 @@ public abstract class MobSpawnerBaseLogic {
 
                     if (entityinsentient == null || entityinsentient.getCanSpawnHere() && entityinsentient.isNotColliding()) {
                         if (this.spawnData.getNbt().getSize() == 1 && this.spawnData.getNbt().hasKey("id", 8) && entity instanceof EntityLiving) {
+                            entity.spawnedViaMobSpawner = true; // Paper
                             ((EntityLiving) entity).onInitialSpawn(world.getDifficultyForLocation(new BlockPos(entity)), (IEntityLivingData) null);
                         }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index e8bc734..06380f1 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1077,6 +1077,11 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
 
         return false;
     }
+
+    @Override
+    public boolean fromMobSpawner() {
+        return getHandle().spawnedViaMobSpawner;
+    }
     // Paper end
 
     public Spigot spigot() {
-- 
2.18.0

