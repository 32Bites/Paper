From 606bc04b5f5757a0f0b83e0a7db9945805659c70 Mon Sep 17 00:00:00 2001
From: kashike <kashike@vq.lc>
Date: Tue, 10 Oct 2017 16:06:17 -0400
Subject: [PATCH] Configurable flying kick messages


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 2001175..621c585 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -244,4 +244,11 @@ public class PaperConfig {
         }
         packetInSpamThreshold = getInt("settings.incoming-packet-spam-threshold", 300);
     }
+
+    public static String flyingKickPlayerMessage = "Flying is not enabled on this server";
+    public static String flyingKickVehicleMessage = "Flying is not enabled on this server";
+    private static void flyingKickMessages() {
+        flyingKickPlayerMessage = getString("messages.kick.flying-player", flyingKickPlayerMessage);
+        flyingKickVehicleMessage = getString("messages.kick.flying-vehicle", flyingKickVehicleMessage);
+    }
 }
diff --git a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
index 491c2e0..5d14ec1 100644
--- a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
+++ b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
@@ -303,7 +303,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
         if (this.floating) {
             if (++this.floatingTickCount > 80) {
                 LOGGER.warn("{} was kicked for floating too long!", (Object) this.player.getName());
-                this.disconnect(new TextComponentTranslation("multiplayer.disconnect.flying", new Object[0]));
+                this.disconnect(com.destroystokyo.paper.PaperConfig.flyingKickPlayerMessage); // Paper - use configurable kick message")
                 return;
             }
         } else {
@@ -324,7 +324,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
             if (this.vehicleFloating && this.player.getLowestRidingEntity().getControllingPassenger() == this.player) {
                 if (++this.vehicleFloatingTickCount > 80) {
                     LOGGER.warn("{} was kicked for floating a vehicle too long!", (Object) this.player.getName());
-                    this.disconnect(new TextComponentTranslation("multiplayer.disconnect.flying", new Object[0]));
+                    this.disconnect(com.destroystokyo.paper.PaperConfig.flyingKickVehicleMessage); // Paper - use configurable kick message)
                     return;
                 }
             } else {
-- 
2.18.0

