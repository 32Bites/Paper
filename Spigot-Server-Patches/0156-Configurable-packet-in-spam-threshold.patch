From a2afd55a3a61abc518f9619e5b657bde60ba6e3b Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Tue, 10 Oct 2017 16:03:24 -0400
Subject: [PATCH] Configurable packet in spam threshold


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index cf06f8a..2001175 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -235,4 +235,13 @@ public class PaperConfig {
     private static void bungeeOnlineMode() {
         bungeeOnlineMode = getBoolean("settings.bungee-online-mode", true);
     }
+    
+    public static int packetInSpamThreshold = 300;
+    private static void packetInSpamThreshold() {
+        if (version < 11) {
+            int oldValue = getInt("settings.play-in-use-item-spam-threshold", 300);
+            set("settings.incoming-packet-spam-threshold", oldValue);
+        }
+        packetInSpamThreshold = getInt("settings.incoming-packet-spam-threshold", 300);
+    }
 }
diff --git a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
index 04361e3..838194c 100644
--- a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
+++ b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
@@ -279,6 +279,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                             Integer.valueOf(144)));
     private int limitedPackets;
     private long lastLimitedPacket = -1L;
+    private static final int THRESHOLD = com.destroystokyo.paper.PaperConfig.packetInSpamThreshold; // Paper - Configurable threshold
 
     public NetHandlerPlayServer(MinecraftServer server, NetworkManager networkManagerIn, EntityPlayerMP playerIn) {
         this.serverController = server;
@@ -1112,9 +1113,9 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
     }
 
     private boolean checkLimit(long timestamp) {
-        if (this.lastLimitedPacket != -1L && timestamp - this.lastLimitedPacket < 30L && this.limitedPackets++ >= 4) {
+        if (this.lastLimitedPacket != -1L && timestamp - this.lastLimitedPacket < THRESHOLD && this.limitedPackets++ >= 8) {
             return false;
-        } else if (this.lastLimitedPacket != -1L && timestamp - this.lastLimitedPacket < 30L) {
+        } else if (this.lastLimitedPacket != -1L && timestamp - this.lastLimitedPacket < THRESHOLD) {
             return true;
         } else {
             this.lastLimitedPacket = timestamp;
-- 
2.18.0

