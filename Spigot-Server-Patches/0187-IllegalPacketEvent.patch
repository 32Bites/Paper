From e7ee319d76e771e2319788a4c011c1b18ec729b9 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 20 Oct 2017 20:16:48 -0400
Subject: [PATCH] IllegalPacketEvent

Fired for invalid data from players that represents hacking attempts

diff --git a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
index 5d14ec1..e342e2d 100644
--- a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
+++ b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
@@ -1,5 +1,6 @@
 package net.minecraft.network;
 
+import com.destroystokyo.paper.event.player.IllegalPacketEvent;
 import com.google.common.base.Charsets;
 import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
@@ -2488,8 +2489,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                     CraftEventFactory.handleEditBookEvent(this.player, itemstack1);
                 }
             } catch (Exception var29) {
-                LOGGER.error("Couldn't handle book info", (Throwable) var29);
-                this.disconnect("Invalid book data!");
+                IllegalPacketEvent.process(player.getBukkitEntity(), "InvalidBookEdit", "Invalid book data!", var29); // Paper
             }
         } else if ("MC|BSign".equals(s)) {
             if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
@@ -2534,8 +2534,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                     CraftEventFactory.handleEditBookEvent(this.player, itemstack2);
                 }
             } catch (Exception var32) {
-                LOGGER.error("Couldn't sign book", (Throwable) var32);
-                this.disconnect("Invalid book data!");
+                IllegalPacketEvent.process(player.getBukkitEntity(), "InvalidBookSign", "Invalid book data!", var32); // Paper
             }
         } else if ("MC|TrSel".equals(s)) {
             try {
@@ -2546,8 +2545,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                     ((ContainerMerchant) container).setCurrentRecipeIndex(j);
                 }
             } catch (Exception var28) {
-                LOGGER.error("Couldn't select trade", (Throwable) var28);
-                this.disconnect("Invalid trade data!");
+                IllegalPacketEvent.process(player.getBukkitEntity(), "InvalidTrade", "Invalid trade data!", var28); // Paper
             }
         } else if ("MC|AdvCmd".equals(s)) {
             if (!this.serverController.isCommandBlockEnabled()) {
@@ -2698,8 +2696,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                         iinventory.markDirty();
                     }
                 } catch (Exception var25) {
-                    LOGGER.error("Couldn't set beacon", (Throwable) var25);
-                    this.disconnect("Invalid beacon data!");
+                    IllegalPacketEvent.process(player.getBukkitEntity(), "InvalidBeacon", "Invalid beacon data!", var25); // Paper
                 }
             }
         } else if ("MC|ItemName".equals(s)) {
@@ -2796,8 +2793,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
                 this.player.connection.sendPacket(new SPacketSetSlot(-2, k, this.player.inventory.getStackInSlot(k)));
                 this.player.connection.sendPacket(new SPacketHeldItemChange(this.player.inventory.currentItem));
             } catch (Exception var23) {
-                LOGGER.error("Couldn't pick item", (Throwable) var23);
-                this.disconnect("Invalid pick item!");
+                IllegalPacketEvent.process(player.getBukkitEntity(), "InvalidPickItem", "Invalid PickItem", var23); // Paper
             }
         } else if (packetIn.getChannelName().equals("REGISTER")) {
             try {
-- 
2.18.0

