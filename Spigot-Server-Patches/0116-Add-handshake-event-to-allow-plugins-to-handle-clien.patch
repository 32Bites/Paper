From fb379d6fc7e6e0856611c244a7d7e9547d2fe92a Mon Sep 17 00:00:00 2001
From: kashike <kashike@vq.lc>
Date: Sat, 7 Oct 2017 23:31:14 -0400
Subject: [PATCH] Add handshake event to allow plugins to handle client
 handshaking logic themselves


diff --git a/src/main/java/net/minecraft/server/network/NetHandlerHandshakeTCP.java b/src/main/java/net/minecraft/server/network/NetHandlerHandshakeTCP.java
index 46af174..cdc771c 100644
--- a/src/main/java/net/minecraft/server/network/NetHandlerHandshakeTCP.java
+++ b/src/main/java/net/minecraft/server/network/NetHandlerHandshakeTCP.java
@@ -88,7 +88,33 @@ public class NetHandlerHandshakeTCP implements INetHandlerHandshakeServer {
                 } else {
                     this.networkManager.setNetHandler(new NetHandlerLoginServer(this.server, this.networkManager));
 
-                    if (SpigotConfig.bungee) {
+                    // Paper start - handshake event
+                    boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                    boolean handledByEvent = false;
+                    // Try and handle the handshake through the event
+                    if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
+                        com.destroystokyo.paper.event.player.PlayerHandshakeEvent event = new com.destroystokyo.paper.event.player.PlayerHandshakeEvent(packetIn.ip, !proxyLogicEnabled);
+                        if (event.callEvent()) {
+                            // If we've failed somehow, let the client know so and go no further.
+                            if (event.isFailed()) {
+                                net.minecraft.util.text.TextComponentString message = new net.minecraft.util.text.TextComponentString(event.getFailMessage());
+                                this.networkManager.sendPacket(new SPacketDisconnect(message));
+                                this.networkManager.closeChannel(message);
+                                return;
+                            }
+
+                            packetIn.ip = event.getServerHostname();
+                            this.networkManager.socketAddress = new java.net.InetSocketAddress(event.getSocketAddressHostname(), ((java.net.InetSocketAddress) this.networkManager.socketAddress).getPort());
+                            this.networkManager.spoofedUUID = event.getUniqueId();
+                            this.networkManager.spoofedProfile = gson.fromJson(event.getPropertiesJson(), com.mojang.authlib.properties.Property[].class);
+                            handledByEvent = true; // Hooray, we did it!
+                        }
+                    }
+                    // Don't try and handle default logic if it's been handled by the event.
+                    if (!handledByEvent && proxyLogicEnabled) {
+                        // Paper end
+
+                    //if (SpigotConfig.bungee) { // Paper - comment out, we check above!
                         String[] split = packetIn.ip.split("\u0000");
 
                         if (split.length != 3 && split.length != 4) {
-- 
2.18.0

