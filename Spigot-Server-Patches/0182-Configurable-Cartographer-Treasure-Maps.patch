From 523cee6ce787a298e0e945462985e5629ddb7936 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 20 Oct 2017 19:57:48 -0400
Subject: [PATCH] Configurable Cartographer Treasure Maps

Allow configuring for cartographers to return the same map location

Also allow turning off treasure maps all together as they can eat up Map ID's
which are limited in quantity.

diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index e516144..1b993d7 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -389,4 +389,14 @@ public class PaperWorldConfig {
             Bukkit.getLogger().warning("Spawn Egg and Armor Stand NBT filtering disabled, this is a potential security risk");
         }
     }
+
+    public boolean enableTreasureMaps = true;
+    public boolean treasureMapsAlreadyDiscovered = false;
+    private void treasureMapsAlreadyDiscovered() {
+        enableTreasureMaps = getBoolean("enable-treasure-maps", true);
+        treasureMapsAlreadyDiscovered = getBoolean("treasure-maps-return-already-discovered", false);
+        if (treasureMapsAlreadyDiscovered) {
+            log("Treasure Maps will return already discovered locations");
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityVillager.java b/src/main/java/net/minecraft/entity/passive/EntityVillager.java
index 8488d88..54a0596 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityVillager.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityVillager.java
@@ -1178,7 +1178,8 @@ public class EntityVillager extends EntityAgeable implements INpc, IMerchant {
         public void addMerchantRecipe(IMerchant merchant, MerchantRecipeList recipeList, Random random) {
             int i = this.value.getPrice(random);
             World world = merchant.getWorld();
-            BlockPos blockposition = world.findNearestStructure(this.destination, merchant.getPos(), true);
+            if (!world.paperConfig.enableTreasureMaps) return; //Paper
+            BlockPos blockposition = world.findNearestStructure(this.destination, merchant.getPos(), world.paperConfig.treasureMapsAlreadyDiscovered); // Paper - pass false to return first structure, regardless of if its been discovered. true returns only undiscovered.
 
             if (blockposition != null) {
                 ItemStack itemstack = ItemMap.setupNewMap(world, (double) blockposition.getX(), (double) blockposition.getZ(), (byte) 2, true, true);
-- 
2.18.0

