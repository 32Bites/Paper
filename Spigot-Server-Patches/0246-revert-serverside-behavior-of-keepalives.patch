From 534ffdbcf94e85b80556a56d46a14f2a31912daa Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Sun, 15 Oct 2017 00:29:07 +0100
Subject: [PATCH] revert serverside behavior of keepalives

This patch intends to bump up the time that a client has to reply to the
server back to 30 seconds as per pre 1.12.2, which allowed clients
more than enough time to reply potentially allowing them to be less
tempermental due to lag spikes on the network thread, e.g. that caused
by plugins that are interacting with netty.

We also add a system property to allow people to tweak how long the server
will wait for a reply. There is a compromise here between lower and higher
values, lower values will mean that dead connections can be closed sooner,
whereas higher values will make this less sensitive to issues such as spikes
from networking or during connections flood of chunk packets on slower clients,
 at the cost of dead connections being kept open for longer.

Fields that are currently unmapped are commented while we wait on MCP
https://github.com/ModCoderPack/MCPBot-Issues/issues/563

diff --git a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
index 7448993..9f65f36 100644
--- a/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
+++ b/src/main/java/net/minecraft/network/NetHandlerPlayServer.java
@@ -223,6 +223,7 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
     private int movePacketCounter;
     private int lastMovePacketCounter;
     private ServerRecipeBookHelper field_194309_H = new ServerRecipeBookHelper();
+    private static final long KEEPALIVE_LIMIT = Long.getLong("paper.playerconnection.keepalive", 30) * 1000; // Paper - provide property to set keepalive limit
     private final CraftServer server;
     private boolean processedDisconnect;
     private int lastTick = MinecraftServer.currentTick;
@@ -340,18 +341,24 @@ public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable {
         }
 
         this.serverController.profiler.startSection("keepAlive");
-        long i = this.currentTimeMillis();
-
-        if (i - this.field_194402_f >= 25000L) {
-            if (this.field_194403_g) {
+        // Paper Start - give clients a longer time to respond to pings as per pre 1.12.2 timings
+        // This should effectively place the keepalive handling back to "as it was" before 1.12.2
+        long currentTime = this.currentTimeMillis();
+        long elapsedTime = currentTime - field_194402_f; // lastKeepAliveTime
+
+        if (field_194403_g) { // pendingKeepAlive
+            // We're pending a ping from the client
+            if (!this.processedDisconnect && elapsedTime >= KEEPALIVE_LIMIT) { // Check keepalive limit, don't fire if already disconnected
+                NetHandlerPlayServer.LOGGER.warn("{} was kicked due to keepalive timeout!", this.player.getName()); // more info
                 this.disconnect(new TextComponentTranslation("disconnect.timeout", new Object[0]));
-            } else {
-                this.field_194403_g = true;
-                this.field_194402_f = i;
-                this.field_194404_h = i;
-                this.sendPacket(new SPacketKeepAlive(this.field_194404_h));
             }
+        } else {
+            this.field_194403_g = true; // pendingKeepAlive
+            this.field_194402_f = currentTime; // lastKeepAliveTime
+            this.field_194404_h = currentTime; // keepAliveId
+            this.sendPacket(new SPacketKeepAlive(this.field_194404_h)); // keepAliveId
         }
+        // Paper end
 
         this.serverController.profiler.endSection();
 
-- 
2.18.0

