From d6c45df1b960fa7307fbb3e577406b11930f836c Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 27 Sep 2017 15:26:10 -0400
Subject: [PATCH] Optimize Pathfinding

Prevents pathfinding from spamming failures for things such as arrow
attacks

diff --git a/src/main/java/net/minecraft/pathfinding/PathNavigate.java b/src/main/java/net/minecraft/pathfinding/PathNavigate.java
index 503e50c..8f3dcb6 100644
--- a/src/main/java/net/minecraft/pathfinding/PathNavigate.java
+++ b/src/main/java/net/minecraft/pathfinding/PathNavigate.java
@@ -8,6 +8,7 @@ import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.init.Blocks;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
@@ -120,9 +121,25 @@ public abstract class PathNavigate {
         return this.setPath(this.getPathToXYZ(x, y, z), speedIn);
     }
 
+    // Paper start - Pathfinding optimizations
+    private int lastFailure = 0;
+    private int pathfindFailures = 0;
     public boolean tryMoveToEntityLiving(Entity entityIn, double speedIn) {
+        if (this.pathfindFailures > 10 && this.getEntityPosition() == null && MinecraftServer.currentTick < this.lastFailure + 40) {
+            return false;
+        }
+
         Path var4 = this.getPathToEntityLiving(entityIn);
-        return var4 != null && this.setPath(var4, speedIn);
+
+        if (var4 != null && this.setPath(var4, speedIn)) {
+            this.lastFailure = 0;
+            this.pathfindFailures = 0;
+            return true;
+        } else {
+            this.pathfindFailures++;
+            this.lastFailure = MinecraftServer.currentTick;
+            return false;
+        }
     }
 
     public boolean setPath(@Nullable Path pathentityIn, double speedIn) {
@@ -260,6 +277,10 @@ public abstract class PathNavigate {
     }
 
     public void clearPath() {
+        // Paper start - Pathfinding optimizations
+        this.pathfindFailures = 0;
+        this.lastFailure = 0;
+        // Paper end
         this.currentPath = null;
     }
 
-- 
2.18.0

