From dbc5485ab97de055c95761e87488b068cc4225f7 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 13 Jan 2018 12:26:37 -0500
Subject: [PATCH] Fix SPIGOT-3764


diff --git a/src/main/java/net/minecraft/item/ItemSkull.java b/src/main/java/net/minecraft/item/ItemSkull.java
index 8c8bf9c..5bcbfe1 100644
--- a/src/main/java/net/minecraft/item/ItemSkull.java
+++ b/src/main/java/net/minecraft/item/ItemSkull.java
@@ -160,7 +160,7 @@ public class ItemSkull extends Item {
                             nbt.setTag("SkullOwner", NBTUtil.writeGameProfile(new NBTTagCompound(), gameprofile));
                             return false;
                         }
-                    });
+                    }, true);
             return true;
         } else {
             NBTTagList textures = nbt.getCompoundTag("SkullOwner").getCompoundTag("Properties").getTagList("textures", 10);
diff --git a/src/main/java/net/minecraft/tileentity/TileEntitySkull.java b/src/main/java/net/minecraft/tileentity/TileEntitySkull.java
index 14f6a8a..1624a7e 100644
--- a/src/main/java/net/minecraft/tileentity/TileEntitySkull.java
+++ b/src/main/java/net/minecraft/tileentity/TileEntitySkull.java
@@ -180,10 +180,11 @@ public class TileEntitySkull extends TileEntity { // Paper - Remove ITickable
 
                         return false;
                     }
-                });
+                }, true);
     }
 
-    public static Future<GameProfile> b(final GameProfile gameprofile, final Predicate<GameProfile> callback) {
+    // Paper - temp fixes until spigot fixes it
+    public static Future<GameProfile> b(final GameProfile gameprofile, final Predicate<GameProfile> callback, boolean doAsync) {
         if (gameprofile != null && !StringUtils.isNullOrEmpty(gameprofile.getName())) {
             if (gameprofile.isComplete() && gameprofile.getProperties().containsKey("textures")) {
                 callback.apply(gameprofile);
@@ -196,6 +197,7 @@ public class TileEntitySkull extends TileEntity { // Paper - Remove ITickable
                         return Futures.<GameProfile>immediateFuture(profile);
                     }
 
+                    if (doAsync) {
                     return executor.submit(
                             new Callable<GameProfile>() {
                                 public GameProfile call() {
@@ -216,6 +218,15 @@ public class TileEntitySkull extends TileEntity { // Paper - Remove ITickable
                                     return profile;
                                 }
                             });
+                    } else {
+                        profile = TileEntitySkull.skinCache.getUnchecked(gameprofile.getName().toLowerCase(Locale.ROOT));
+                        if (profile == null) {
+                            callback.apply(gameprofile);
+                        } else {
+                            callback.apply(profile);
+                        }
+                        return Futures.immediateFuture(profile);
+                    }
                 }
 
                 callback.apply(gameprofile);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaSkull.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaSkull.java
index dc0eb6e..df6b452 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaSkull.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaSkull.java
@@ -71,7 +71,7 @@ class CraftMetaSkull extends CraftMetaItem implements SkullMeta {
         super.applyToItem(tag);
 
         if (this.profile != null) {
-            this.profile = (GameProfile) Futures.getUnchecked(TileEntitySkull.b(this.profile, Predicates.alwaysTrue()));
+            this.profile = (GameProfile) Futures.getUnchecked(TileEntitySkull.b(this.profile, Predicates.alwaysTrue(), false)); // Paper
             NBTTagCompound owner = new NBTTagCompound();
             NBTUtil.writeGameProfile(owner, this.profile);
             tag.setTag(SKULL_OWNER.NBT, owner);
-- 
2.18.0

