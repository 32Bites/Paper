From deb6ae935c6e20e1e22782d0ca90d0d745f19b5a Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 7 Oct 2017 23:44:27 -0400
Subject: [PATCH] Fix Bugs with Spigot Mob Spawn Logic

Spigot drastically altered vanilla mob spawn logic and caused a few issues.
1) Used only spawnable chunks vs entire world for entity counting, resulting in ignoring
other entities in the world, and causing the world to go over its intended limit.

Specially with servers using smaller mob spawn ranges than view distance, as well as affects spawning API

2) Spigot was using 16x16 division instead of vanilla 17x17 division.

This patch returns mob counting to use all loaded chunks, and 17x17 division.

diff --git a/src/main/java/net/minecraft/entity/passive/EntityWaterMob.java b/src/main/java/net/minecraft/entity/passive/EntityWaterMob.java
index 25b2893..ff6afd0 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityWaterMob.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityWaterMob.java
@@ -23,8 +23,8 @@ public abstract class EntityWaterMob extends EntityLiving implements IAnimals {
         // Based around EntityAnimal's implementation
         int x = MathHelper.floor(this.posX);
         int y = MathHelper.floor(this.getEntityBoundingBox().minY);
-        int z = MathHelper.floor(this.posZ);
-        Block block = this.world.getBlockState(new BlockPos(x, y, z)).getBlock();
+        int k = MathHelper.floor(this.posZ);
+        Block block = this.world.getBlockState(new BlockPos(x, y, k)).getBlock();
 
         return block == Blocks.WATER || block == Blocks.FLOWING_WATER;
         // Paper end
diff --git a/src/main/java/net/minecraft/world/WorldEntitySpawner.java b/src/main/java/net/minecraft/world/WorldEntitySpawner.java
index 48b77f9..0ff4616 100644
--- a/src/main/java/net/minecraft/world/WorldEntitySpawner.java
+++ b/src/main/java/net/minecraft/world/WorldEntitySpawner.java
@@ -32,6 +32,14 @@ public final class WorldEntitySpawner {
     private final LongHashSet eligibleChunksForSpawning = new LongHashSet();
 
     private int getEntityCount(WorldServer server, Class oClass) {
+        // Paper start - use entire world, not just active chunks. Spigot broke vanilla expectations.
+        if (true) {
+            return server.getChunkProvider().id2ChunkMap.values().stream()
+                    .mapToInt(c -> c.entityCount.get(oClass))
+                    .sum();
+        }
+        // Paper end
+
         int i = 0;
 
         // Paper - Decompile fix start
@@ -118,7 +126,7 @@ public final class WorldEntitySpawner {
                         worldServerIn.countEntities(enumcreaturetype.getCreatureClass());
                         int l1 = limit * i / MOB_COUNT_DIV;
 
-                        if ((mobcnt = this.getEntityCount(worldServerIn, enumcreaturetype.getCreatureClass())) <= limit * i / 256) {
+                        if ((mobcnt = this.getEntityCount(worldServerIn, enumcreaturetype.getCreatureClass())) <= limit * i / 289) { // Paper - use 17x17 like vanilla (MOB_COUNT_DIV at top of file)
                             BlockPos.MutableBlockPos blockposition_mutableblockposition = new BlockPos.MutableBlockPos();
                             Iterator iterator1 = this.eligibleChunksForSpawning.iterator();
                             int moblimit = limit * i / 256 - mobcnt + 1;
diff --git a/src/main/java/net/minecraft/world/chunk/Chunk.java b/src/main/java/net/minecraft/world/chunk/Chunk.java
index c451005..aad4f45 100644
--- a/src/main/java/net/minecraft/world/chunk/Chunk.java
+++ b/src/main/java/net/minecraft/world/chunk/Chunk.java
@@ -703,7 +703,7 @@ public class Chunk {
             index = this.entityLists.length - 1;
         }
 
-        this.entityLists[index].remove(entityIn);
+        if (!this.entityLists[index].remove(entityIn)) { return; } // Paper
 
         // Paper start - update counts
         if (entityIn instanceof net.minecraft.entity.item.EntityItem) {
-- 
2.18.0

