From d9ba0eed20e5c6b6236834775bb29629c024d5be Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Oct 2017 18:30:37 -0400
Subject: [PATCH] Avoid blocking on Network Manager creation

Per Paper issue 294

diff --git a/src/main/java/net/minecraft/network/NetworkSystem.java b/src/main/java/net/minecraft/network/NetworkSystem.java
index 92f8b57..edcd6f3 100644
--- a/src/main/java/net/minecraft/network/NetworkSystem.java
+++ b/src/main/java/net/minecraft/network/NetworkSystem.java
@@ -74,6 +74,15 @@ public class NetworkSystem {
     public volatile boolean isAlive;
     private final List<ChannelFuture> endpoints = Collections.<ChannelFuture>synchronizedList(Lists.newArrayList());
     private final List<NetworkManager> networkManagers = Collections.<NetworkManager>synchronizedList(Lists.newArrayList());
+    // Paper start - prevent blocking on adding a new network manager while the server is ticking
+    private final List<NetworkManager> pending = Collections.synchronizedList(Lists.<NetworkManager>newArrayList());
+    private void addPending() {
+        synchronized (pending) {
+            this.networkManagers.addAll(pending);
+            pending.clear();
+        }
+    }
+    // Paper end
 
     public NetworkSystem(MinecraftServer server) {
         this.mcServer = server;
@@ -115,7 +124,7 @@ public class NetworkSystem {
                                                                     .addLast("prepender", new NettyVarint21FrameEncoder())
                                                                     .addLast("encoder", new NettyPacketEncoder(EnumPacketDirection.CLIENTBOUND));
                                                             NetworkManager networkmanager = new NetworkManager(EnumPacketDirection.SERVERBOUND);
-                                                            NetworkSystem.this.networkManagers.add(networkmanager);
+                                                            pending.add(networkmanager); // Paper
                                                             channel.pipeline().addLast("packet_handler", networkmanager);
                                                             networkmanager.setNetHandler(
                                                                     new NetHandlerHandshakeTCP(NetworkSystem.this.mcServer, networkmanager));
@@ -143,6 +152,7 @@ public class NetworkSystem {
     public void networkTick() {
         List var2 = this.networkManagers;
         synchronized (this.networkManagers) {
+            addPending(); // Paper
             if (SpigotConfig.playerShuffle > 0 && MinecraftServer.currentTick % SpigotConfig.playerShuffle == 0) {
                 Collections.shuffle(this.networkManagers);
             }
-- 
2.18.0

