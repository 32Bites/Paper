From 8dc47a3680bd2a330442ede17890def61d96431a Mon Sep 17 00:00:00 2001
From: Byteflux <byte@byteflux.net>
Date: Sun, 24 Sep 2017 17:48:50 -0400
Subject: [PATCH] Fast draining


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 9734e6c..8a28def 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -179,4 +179,11 @@ public class PaperWorldConfig {
         optimizeExplosions = getBoolean("optimize-explosions", false);
         log("Optimize explosions: " + optimizeExplosions);
     }
+
+    public boolean fastDrainLava;
+    public boolean fastDrainWater;
+    private void fastDrain() {
+        fastDrainLava = getBoolean("fast-drain.lava", false);
+        fastDrainWater = getBoolean("fast-drain.water", false);
+    }
 }
diff --git a/src/main/java/net/minecraft/block/BlockDynamicLiquid.java b/src/main/java/net/minecraft/block/BlockDynamicLiquid.java
index 3c34353..3bf9c78 100644
--- a/src/main/java/net/minecraft/block/BlockDynamicLiquid.java
+++ b/src/main/java/net/minecraft/block/BlockDynamicLiquid.java
@@ -71,7 +71,7 @@ public class BlockDynamicLiquid extends BlockLiquid {
                 }
             }
 
-            if (this.blockMaterial == Material.LAVA && i < 8 && i1 < 8 && i1 > i && rand.nextInt(4) != 0) {
+            if (!worldIn.paperConfig.fastDrainLava && this.blockMaterial == Material.LAVA && i < 8 && i1 < 8 && i1 > i && rand.nextInt(4) != 0) { // Paper - Fast draining
                 j *= 4;
             }
 
@@ -80,7 +80,7 @@ public class BlockDynamicLiquid extends BlockLiquid {
             } else {
                 i = i1;
 
-                if (i1 < 0) {
+                if (i1 < 0 || canFastDrain(worldIn, pos)) { // Paper - Fast draining
                     worldIn.setBlockToAir(pos);
                 } else {
                     state = state.withProperty(LEVEL, Integer.valueOf(i1));
@@ -270,4 +270,59 @@ public class BlockDynamicLiquid extends BlockLiquid {
         }
         return super.tickRate(world);
     }
+
+    /**
+     * Paper - Convenience method for getting fluid levels
+     */
+    private int getFluidLevel(World world, BlockPos pos) {
+        return world.getBlockState(pos).getMaterial() == this.blockMaterial ? world.getBlockState(pos).getValue(BlockLiquid.LEVEL) : -1;
+    }
+
+    /**
+     * Paper - Data check method for fast draining
+     */
+    private int getData(World world, BlockPos pos) {
+        int data = this.getFluidLevel(world, pos);
+        return data < 8 ? data : 0;
+    }
+
+    /**
+     * Paper - Checks surrounding blocks to determine if block can be fast drained
+     */
+    private boolean canFastDrain(World world, BlockPos pos) {
+        boolean result = false;
+        int data = getData(world, pos);
+        if (this.blockMaterial == Material.WATER) {
+            if (world.paperConfig.fastDrainWater) {
+                result = true;
+                if (getData(world, pos.down()) < 0) {
+                    result = false;
+                } else if (world.getBlockState(pos.north()).getMaterial() == Material.WATER && getData(world, pos.north()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.south()).getMaterial() == Material.WATER && getData(world, pos.south()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.west()).getMaterial() == Material.WATER && getData(world, pos.west()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.east()).getMaterial() == Material.WATER && getData(world, pos.east()) < data) {
+                    result = false;
+                }
+            }
+        } else if (this.blockMaterial == Material.LAVA) {
+            if (world.paperConfig.fastDrainLava) {
+                result = true;
+                if (getData(world, pos.down()) < 0 || world.getBlockState(pos.up()).getMaterial() != Material.AIR) {
+                    result = false;
+                } else if (world.getBlockState(pos.north()).getMaterial() == Material.LAVA && getData(world, pos.north()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.south()).getMaterial() == Material.LAVA && getData(world, pos.south()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.west()).getMaterial() == Material.LAVA && getData(world, pos.west()) < data) {
+                    result = false;
+                } else if (world.getBlockState(pos.east()).getMaterial() == Material.LAVA && getData(world, pos.east()) < data) {
+                    result = false;
+                }
+            }
+        }
+        return result;
+    }
 }
-- 
2.18.0

